import{I as n,b as P,c as E,f as V,g as D}from"./validate-field-CBWFAOsB.js";import{a as h,c as N,o as j,b as s,u as o,F as x}from"./index-BohIvy7G.js";const T={__name:"LegalPersonForm",props:["modelValue","formError"],emits:["update:formError"],setup(g,{expose:i,emit:f}){const c=g,l=f,e=h({registeredName:!1,cnpj:!1,openingDate:!1,phone:!1}),{modelValue:r}=c,p=()=>{e.registeredName=!1,D(r.legalPerson.registeredName)||(e.registeredName=!0,l("update:formError",!0))},d=()=>{e.cnpj=!1,V(r.legalPerson.cnpj)||(e.cnpj=!0,l("update:formError",!0))},m=()=>{e.openingDate=!1,E(r.legalPerson.openingDate)||(e.openingDate=!0,l("update:formError",!0))},u=()=>{e.phone=!1,P(r.legalPerson.phone)||(e.phone=!0,l("update:formError",!0))};return i({validateRegisteredName:p,validateCnpj:d,validateOpeningDate:m,validatePhone:u}),(v,a)=>(j(),N(x,null,[s(n,{text:"Razão social",type:"text",modelValue:o(r).legalPerson.registeredName,"onUpdate:modelValue":a[0]||(a[0]=t=>o(r).legalPerson.registeredName=t),errorMessage:"Digite um nome válido",hasError:e.registeredName,onBlur:p,dataTest:"legal-person__registered-name"},null,8,["modelValue","hasError"]),s(n,{text:"CNPJ",type:"text",modelValue:o(r).legalPerson.cnpj,"onUpdate:modelValue":a[1]||(a[1]=t=>o(r).legalPerson.cnpj=t),errorMessage:"O cpf deve ter 14 caracteres",hasError:e.cnpj,onBlur:d,dataTest:"legal-person__cnpj"},null,8,["modelValue","hasError"]),s(n,{text:"Data de abertura",type:"date",modelValue:o(r).legalPerson.openingDate,"onUpdate:modelValue":a[2]||(a[2]=t=>o(r).legalPerson.openingDate=t),errorMessage:"Preencha uma data válida",hasError:e.openingDate,onBlur:m,dataTest:"legal-person__opening-date"},null,8,["modelValue","hasError"]),s(n,{text:"Telefone",type:"text",modelValue:o(r).legalPerson.phone,"onUpdate:modelValue":a[3]||(a[3]=t=>o(r).legalPerson.phone=t),errorMessage:"o telefone deve apenas números e ter 11 dígitos com DDD",hasError:e.phone,onBlur:u,dataTest:"legal-person__phone"},null,8,["modelValue","hasError"])],64))}};export{T as _};
